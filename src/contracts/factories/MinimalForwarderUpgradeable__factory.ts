/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MinimalForwarderUpgradeable,
  MinimalForwarderUpgradeableInterface,
} from "../MinimalForwarderUpgradeable";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610adf806100206000396000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610877565b6001600160a01b031660009081526035602052604090205490565b6040519081526020015b60405180910390f35b6100956100903660046108a7565b6100d3565b604051610079929190610976565b3480156100af57600080fd5b506100c36100be3660046108a7565b610278565b6040519015158152602001610079565b600060606100e2858585610278565b6101595760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b610168608086013560016109b2565b603560006101796020890189610877565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101b39190610877565b6001600160a01b0316606088013560408901356101d360a08b018b6109d8565b6101e060208d018d610877565b6040516020016101f293929190610a1f565b60408051601f198184030181529082905261020c91610a45565b600060405180830381858888f193505050503d806000811461024a576040519150601f19603f3d011682016040523d82523d6000602084013e61024f565b606091505b509092509050610264603f6060890135610a61565b5a1161026c57fe5b90969095509350505050565b60008061038b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038592507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e8905060208a018a610877565b6102f860408b0160208c01610877565b60408b013560608c013560808d013561031460a08f018f6109d8565b604051610322929190610a83565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f7565b90610466565b90506080850135603560006103a36020890189610877565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103ee57506103d96020860186610877565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061046061040461048a565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610475858561050a565b915091506104828161057a565b509392505050565b60006105057f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6104b960015490565b6002546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b6000808251604114156105415760208301516040840151606085015160001a61053587828585610738565b94509450505050610573565b82516040141561056b5760208301516040840151610560868383610825565b935093505050610573565b506000905060025b9250929050565b600081600481111561058e5761058e610a93565b14156105975750565b60018160048111156105ab576105ab610a93565b14156105f95760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610150565b600281600481111561060d5761060d610a93565b141561065b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610150565b600381600481111561066f5761066f610a93565b14156106c85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610150565b60048160048111156106dc576106dc610a93565b14156107355760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610150565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561076f575060009050600361081c565b8460ff16601b1415801561078757508460ff16601c14155b15610798575060009050600461081c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156107ec573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108155760006001925092505061081c565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161085b60ff86901c601b6109b2565b905061086987828885610738565b935093505050935093915050565b60006020828403121561088957600080fd5b81356001600160a01b03811681146108a057600080fd5b9392505050565b6000806000604084860312156108bc57600080fd5b833567ffffffffffffffff808211156108d457600080fd5b9085019060c082880312156108e857600080fd5b909350602085013590808211156108fe57600080fd5b818601915086601f83011261091257600080fd5b81358181111561092157600080fd5b87602082850101111561093357600080fd5b6020830194508093505050509250925092565b60005b83811015610961578181015183820152602001610949565b83811115610970576000848401525b50505050565b8215158152604060208201526000825180604084015261099d816060850160208701610946565b601f01601f1916919091016060019392505050565b600082198211156109d357634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e198436030181126109ef57600080fd5b83018035915067ffffffffffffffff821115610a0a57600080fd5b60200191503681900382131561057357600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610a57818460208701610946565b9190910192915050565b600082610a7e57634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220832dd8be63ba6dd4a342409bd789ce2bf7384f8bba4ed676307ef2b8f16569fc64736f6c63430008090033";

export class MinimalForwarderUpgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalForwarderUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<MinimalForwarderUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinimalForwarderUpgradeable {
    return super.attach(address) as MinimalForwarderUpgradeable;
  }
  connect(signer: Signer): MinimalForwarderUpgradeable__factory {
    return super.connect(signer) as MinimalForwarderUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderUpgradeableInterface {
    return new utils.Interface(_abi) as MinimalForwarderUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalForwarderUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MinimalForwarderUpgradeable;
  }
}
